---
import { siteConfig } from "../config";
const hasExperience = siteConfig.experience && siteConfig.experience.length > 0;
---

{
  hasExperience && (
    <section id="experience" class="p-8 sm:p-12 md:p-16 lg:p-24">
      <div>
        <div class="grid grid-cols-1 lg:grid-cols-12 gap-8 lg:gap-16 items-start">
          <div class="lg:col-span-4">
            <h2 class="text-3xl sm:text-3xl md:text-4xl xl:text-5xl font-bold text-gray-900">
              Experience
            </h2>
            <div
              class="w-[75px] h-[5px] mt-2 rounded-full"
              style={`background-color: ${siteConfig.accentColor}`}
            />
          </div>

          <div class="lg:col-span-8">
            <div class="relative">
              {siteConfig.experience.map((exp, index) => (
                <div class="relative mb-12 last:mb-0">
                  {/* Timeline dot at top of card */}
                  <div
                    class="absolute left-1/2 -top-2 w-4 h-4 bg-white border-2 rounded-full -translate-x-1/2 z-20 transition-all duration-300"
                    style={`border-color: ${siteConfig.accentColor}; background-color: ${siteConfig.accentColor}`}
                  />

                  {/* Connecting line below card */}
                  {index < siteConfig.experience.length - 1 && (
                    <div class="absolute left-1/2 bottom-0 w-0.5 h-12 bg-gray-300 -translate-x-1/2 translate-y-full z-10" />
                  )}

                  {/* Experience card */}
                  <div class="bg-white rounded-lg shadow-sm border border-gray-100 p-4 sm:p-5 md:p-6 hover:shadow-md transition-shadow duration-300">
                    <div class="mb-4">
                      <div class="flex flex-col sm:flex-row sm:justify-between sm:items-start gap-2">
                        <div class="flex-1">
                          <h3 class="text-lg sm:text-xl md:text-2xl lg:text-xl xl:text-3xl font-semibold text-gray-900">
                            {exp.title}
                          </h3>
                          <p
                            class="text-base sm:text-lg xl:text-xl mt-1"
                            style={`color: ${siteConfig.accentColor}`}
                          >
                            {exp.company}
                          </p>
                          {/* Location and date on mobile (below company) */}
                          <div class="sm:hidden">
                            {exp.location && (
                              <p class="text-xs sm:text-sm md:text-base xl:text-lg text-gray-500 mt-1">
                                {exp.location}
                              </p>
                            )}
                            <p class="text-xs sm:text-sm text-gray-500 mt-1">
                              {exp.dateRange}
                            </p>
                          </div>
                        </div>
                        {/* Date and location on larger screens (right side) */}
                        <div class="hidden sm:block text-right flex-shrink-0">
                          <p class="text-xs sm:text-sm md:text-base xl:text-lg text-gray-500">
                            {exp.dateRange}
                          </p>
                          {exp.location && (
                            <p class="text-xs sm:text-sm text-gray-500 mt-1">
                              {exp.location}
                            </p>
                          )}
                        </div>
                      </div>
                    </div>

                    <ul class="space-y-2">
                      {exp.bullets.map((bullet) => (
                        <li class="flex items-baseline">
                          <span class="mr-2 flex-shrink-0 text-sm sm:text-base md:text-base lg:text-base xl:text-xl" style={{ color: siteConfig.accentColor }}>â€¢</span>
                          <span class="text-sm sm:text-base md:text-base lg:text-base xl:text-xl text-gray-600 leading-relaxed" set:html={bullet
                            .replace(/General Motors/g, `<span style="color: ${siteConfig.accentColor};">General Motors</span>`)
                            .replace(/100,000/g, `<span style="color: ${siteConfig.accentColor};">100,000</span>`)
                            .replace(/~?50%/g, `<span style="color: ${siteConfig.accentColor};">50%</span>`)
                            .replace(/~?30%/g, `<span style="color: ${siteConfig.accentColor};">30%</span>`)
                            .replace(/~?3%/g, `<span style="color: ${siteConfig.accentColor};">3%</span>`)
                            .replace(/5 cm/gi, `<span style="color: ${siteConfig.accentColor};">5 cm</span>`)}
                          >
                          </span>
                        </li>
                      ))}
                    </ul>

                    {exp.skills && exp.skills.length > 0 && (
                      <div class="flex flex-wrap gap-1.5 pt-4">
                        {exp.skills.map((skill) => (
                          <span
                            class="px-2 py-1 bg-gray-100 text-gray-700 rounded text-xs sm:text-xs md:text-xs lg:text-xs xl:text-lg font-medium border border-gray-200"
                          >
                            {skill}
                          </span>
                        ))}
                      </div>
                    )}

                    {exp.title.includes("Master's Thesis Researcher in Robotics") && (
                      <div class="pt-3 flex items-center gap-6">
                        <a
                          href="#projects"
                          onclick="setTimeout(() => { const projectElement = Array.from(document.querySelectorAll('h3')).find(h => h.textContent.includes('Autonomous Drone Landing on Moving UGVs')); if (projectElement) projectElement.scrollIntoView({behavior: 'smooth'}); }, 100);"
                          class="project-link relative text-gray-600 transition-colors duration-300 hover:text-black group"
                          aria-label="Go to Related Project"
                        >
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            width="32"
                            height="32"
                            viewBox="0 0 24 24"
                            fill="none"
                            stroke="currentColor"
                            stroke-width="2.5"
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            class="h-8 w-8 sm:h-9 sm:w-9 md:h-9 md:w-9 lg:h-9 lg:w-9 xl:h-11 xl:w-11"
                          >
                            <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                            <path d="M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0" />
                            <path d="M15 9l-6 6" />
                            <path d="M15 15v-6h-6" />
                          </svg>
                          <span class="absolute -top-8 left-1/2 transform -translate-x-1/2 bg-gray-800 text-white text-xs px-2 py-1 rounded opacity-0 group-hover:opacity-100 transition-opacity duration-300 whitespace-nowrap z-50">
                            Go to Project
                          </span>
                        </a>
                      </div>
                    )}
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}
